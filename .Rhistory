Klasse==as.character(cond[7]) | Klasse==as.character(cond[8])|
Klasse==as.character(cond[9]) | Klasse==as.character(cond[10]) |
Klasse==as.character(cond[11]) | Klasse==as.character(cond[12]) |
Klasse==as.character(cond[13]) | Klasse==as.character(cond[14]) |
Klasse==as.character(cond[15]) | Klasse==as.character(cond[16])|
Klasse==as.character(cond[17]) | Klasse==as.character(cond[18]) |
Klasse==as.character(cond[19]) | Klasse==as.character(cond[20])|
Klasse==as.character(cond[21]) | Klasse==as.character(cond[22]) |
Klasse==as.character(cond[23]) | Klasse==as.character(cond[24]) |
Klasse==as.character(cond[25]) | Klasse==as.character(cond[26]) |
Klasse==as.character(cond[27]) | Klasse==as.character(cond[28])|
Klasse==as.character(cond[29]) | Klasse==as.character(cond[30]) |
Klasse==as.character(cond[31]) | Klasse==as.character(cond[32])
)
print(ggplot(kbnew1, aes(as.POSIXct(time,format="%Y-%m-%d"), Wert, color=Klasse))+  #, color=Klasse_name
geom_line()+
stat_smooth(method = lm)+
#   coord_fixed(ratio = 5)+
#xlim(as.POSIXct(c('2017-10-01','2017-11-23'), format="%Y-%m-%d"))+
geom_point()+
theme_ridges(grid = FALSE)+
ggtitle('Value over time')+
xlab('time')+
#  #  theme_ridges(grid = FALSE)+
theme(
#panel.grid.minor = element_blank(),
#panel.background = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_rect(fill = NA),
panel.grid.major.x = element_line(colour = "black", linetype = 'dashed'),
# panel.grid.minor.x = element_line(colour = "black", linetype = 'dashed'),
panel.grid.major.y= element_line(colour = "black", linetype = 'dashed'),
#      axis.text.x = element_text('text',size = rel(1.2)),
#      axis.text.y= element_text(size = rel(1.2)),
#      axis.ticks.y = element_line(colour = 'black', size = 1, linetype = 'solid'),
#      axis.ticks.x = element_line(colour = 'black', size = 1, linetype = 'solid'),
axis.line = element_line(colour = "black", size = 1, linetype = "solid")
))
dev.off()
}
)
#
# output$info <- renderText({
#   paste0("x=", input$plot_click$x, "\ny=", input$plot_click$y)
# })
output$info <- renderText({
xy_str <- function(e) {
if(is.null(e)) return("NULL\n")
# paste0("x=", structure(round(e$x, 1),class='POSIXct'), " y=", round(e$y, 1), "\n")
# paste0("x=", as.POSIXct(structure(round(e$x, 0),class='POSIXct'),format="%Y-%m-%d"), " y=", round(e$y, 1), "\n")
paste0("x=", as.POSIXct(round(e$x, 0), origin = "1970-01-01",format="%Y-%m-%d" ), " y=", round(e$y, 1), "\n")
}
xy_range_str <- function(e) {
if(is.null(e)) return("NULL\n")
paste0("xmin=", as.POSIXct(round(e$x, 0), origin = "1970-01-01",format="%Y-%m-%d" ),
" xmax=", as.POSIXct(round(e$x, 0), origin = "1970-01-01",format="%Y-%m-%d" ),
" ymin=", round(e$ymin, 1), " ymax=", round(e$ymax, 1))
}
paste0(
"click: ", xy_str(input$plot_click),
"dblclick: ", xy_str(input$plot_dblclick),
"hover: ", xy_str(input$plot_hover),
"brush: ", xy_range_str(input$plot_brush)
)
})
# output$parcoord1 <- renderPlot({
#   par(mar = c(2, 4, 2, .1))
#   state <- input$state
#   cond <- input$conditions
#
#   kbnew1 <- subset(distall_essential, input==as.character(cond[1]) | input==as.character(cond[2])
#| input==as.character(cond[3])
#| input==as.character(cond[4])|
#                      input==as.character(cond[5]) | input==as.character(cond[6]) | input==as.character(cond[7])
#| input==as.character(cond[8])|
#                      input==as.character(cond[9]) | input==as.character(cond[10]) | input==as.character(cond[11])
#| input==as.character(cond[12]) )
#   kbnew1 <- subset(kbnew1, protein==as.character(state) )
#
#
#   channelname <- unique(kbnew1$channel)
#   names(kbnew1)[names(kbnew1) == channelname] <- 'channel1'
# })
}
ui <-dashboardPage(
#skin = 'red',
dashboardHeader(title = "Finanzapp"),
dashboardSidebar(
checkboxGroupInput("conditions", "Select categories to plot:",
allconditions
, selected = allconditions[6]
),
#  selectizeInput('state', label = NULL, choices = NULL, options = list( #klasse_name
#   placeholder = 'Type a category name', maxOptions = length(kbnew$Klasse) )
# ),
textInput("Year","Please enter a year",value = '2020'),
textInput("Month","Please enter a month",value = '12' ),
textInput("Day","Please enter a day",value = '1'),
actionButton("save","Add"),
radioButtons("fileType","Choose file type",
choices = c("png","pdf"),selected = "png"),
downloadButton(outputId="downloadBtn",label="Download the file")
),
dashboardBody(
girafeOutput('parcoord', width = "2%", height = "800px"
#, click = "plot_click", dblclick = "plot_dblclick",
# hover = "plot_hover",
# brush = "plot_brush"
),
# verbatimTextOutput("info"),
verbatimTextOutput("info1")
#,  plotOutput('parcoord1')
)
)
shinyApp(ui, server)
write.csv(kbnew, file = 'kb.csv', row.names = F)
stocksSym$df.tickers
theurl <- "http://www.marketwatch.com/investing/stock/aapl/financials/balance-sheet/quarter"
re <- readHTMLTable(theurl)
library(XML)
re <- readHTMLTable(theurl)
theurl <- "https://www.marketwatch.com/investing/stock/aapl/financials/balance-sheet/quarter"
re <- readHTMLTable(theurl)
library(rvest)
link <- "http://www.marketwatch.com/investing/stock/aapl/financials/balance-sheet/quarter"
read <- read_html(link)
prs <- html_nodes(read, ".financials")
irre <- html_text(prs)
re <- strsplit(irre, split = "\r\n")
re
prs <- html_nodes(read, "td")
irre <- html_text(prs)
re <- strsplit(irre, split = "\r\n")
re
irre
prs <- html_nodes(read, "#ratio_CommonEquityPercentTotalAssets+ .partialSum .valueCell")
irre <- html_text(prs)
irre
library(quantmod)
try(stock_price <- getSymbols(AAPL, from = start_date, auto.assign = FALSE), TRUE)
stock_price
try(stock_price <- getSymbols('AAPL', from = start_date, auto.assign = FALSE), TRUE)
stock_price
getwd()
try(write.csv(stock_price, directory), TRUE)
setwd('/Users/thiemia/Google Drive/Finanzen/monthly trades')
CS_transactions <- read.csv('XXXX4753_Transactions_20200328-143007.CSV',header = F,stringsAsFactors = FALSE)
CS_transactions<-CS_transactions[-1,]
colnames(CS_transactions) <- as.character(CS_transactions[1,])
CS_transactions<-CS_transactions[-1,]
NFLXtrades <- subset(CS_transactions, Symbol=='NFLX')
NFLXtrades$Date<-as.Date(NFLXtrades$Date,format='%m/%d/%Y')
NFLXtrades$Price<-as.numeric(gsub("[\\$,]", "", NFLXtrades$Price))
NFLXtrades$Amount<-as.numeric(gsub("[\\$,]", "", NFLXtrades$Amount))
NFLXtrades$Quantity<-as.numeric(gsub("[\\$,]", "", NFLXtrades$Quantity))
NFLXtrades$`Fees & Comm`<-as.numeric(gsub("[\\$,]", "", NFLXtrades$`Fees & Comm`))
NFLXtradesact <- subset(January, Action=='Buy' | Action=='Sell' | Action=='Sell Short')
NFLXtradesact<- NFLXtradesact[seq(dim(NFLXtradesact)[1],1),]
NFLXtradesact[is.na(NFLXtradesact)] <- 0
has <-0
value <- 0
proceeds <- 0
for (i in 1:nrow(NFLXtradesact)) {
a<- NFLXtradesact[i,]
if(a$Action=='Buy') {
has <- a$Quantity +has
value <- a$Price *a$Quantity +value
pricenew <- value/has
} else {
proceeds <- (a$Price-pricenew) *a$Quantity - as.numeric(a$`Fees & Comm`) +proceeds
has <- has - a$Quantity
value <- has*pricenew
#value <- a$Price *a$Quantity
#pricenew <- value/has
}
}
print(proceeds)
NFLXtradesact <- subset(NFLXtrades, Action=='Buy' | Action=='Sell' | Action=='Sell Short')
NFLXtradesact<- NFLXtradesact[seq(dim(NFLXtradesact)[1],1),]
NFLXtradesact[is.na(NFLXtradesact)] <- 0
has <-0
value <- 0
proceeds <- 0
for (i in 1:nrow(NFLXtradesact)) {
a<- NFLXtradesact[i,]
if(a$Action=='Buy') {
has <- a$Quantity +has
value <- a$Price *a$Quantity +value
pricenew <- value/has
} else {
proceeds <- (a$Price-pricenew) *a$Quantity - as.numeric(a$`Fees & Comm`) +proceeds
has <- has - a$Quantity
value <- has*pricenew
#value <- a$Price *a$Quantity
#pricenew <- value/has
}
}
print(proceeds)
has
source('~/Dropbox (VU Basic Sciences)/Manuscript on linear input of NaCl in immune cells/Manuscript 2019-12-04/Figure scripts/F1B2.R')
source('~/Dropbox (VU Basic Sciences)/Manuscript on linear input of NaCl in immune cells/Manuscript 2019-12-04/Figure scripts/S3A.R')
source('~/Dropbox (VU Basic Sciences)/Manuscript on linear input of NaCl in immune cells/Manuscript 2019-12-04/Figure scripts/F4D1.R')
source('~/Dropbox (VU Basic Sciences)/Manuscript on linear input of NaCl in immune cells/Manuscript 2019-12-04/Figure scripts/F4D1.R')
source('~/Dropbox (VU Basic Sciences)/Manuscript on linear input of NaCl in immune cells/Manuscript 2019-12-04/Figure scripts/F4D1.R')
library(flowViz)
# set tickers
tickers <- c('AAPL','NFLX','SPY','GOLD','BRK/B','DIS','CCL','DRI','ZUO','AAL','LULU','DRI','ZM')
l.out <- BatchGetSymbols(tickers = tickers,
first.date = first.date,
last.date = last.date,
freq.data = freq.data,
cache.folder = file.path(tempdir(),
'BGS_Cache') ) # cache in tempdir()
print(l.out$df.control)
library(ggplot2)
ticks <- l.out$df.tickers
colms <- c('price.close', 'ticker', 'ref.date')
ticksdf <- ticks[colms]
no_tick <- unique(ticksdf$ticker)
ticksdf3 <- NULL
for (i in seq_along(no_tick)) {
ticker1 <- no_tick[i]
ticksdf1 <- subset(ticksdf, ticker==ticker1)
ticksdf1 <-ticksdf1[-c(1:22),]
ticksdf1$rel_change <-( (ticksdf1$price.close/ticksdf1$price.close[1])-1)*100
ticksdf3 <- rbind.fill(ticksdf3, ticksdf1)
}
ticksdf3$stockname <- 0
ticksdf3$stockname <- ifelse(!ticksdf3$ticker == 'AAL',
ticksdf3$stockname, 'American Airlines')
ticksdf3$stockname <- ifelse(!ticksdf3$ticker == 'AAPL',
ticksdf3$stockname, 'Apple')
ticksdf3$stockname <- ifelse(!ticksdf3$ticker == 'DIS',
ticksdf3$stockname, 'Disney')
ticksdf3$stockname <- ifelse(!ticksdf3$ticker == 'LULU',
ticksdf3$stockname, 'Lulumoon')
ticksdf3$stockname <- ifelse(!ticksdf3$ticker == 'ZM',
ticksdf3$stockname, 'Zoom video conferences')
ticksdf3$stockname <- ifelse(!ticksdf3$ticker == 'GOLD',
ticksdf3$stockname, 'Barrock Gold')
ticksdf3$stockname <- ifelse(!ticksdf3$ticker == 'CCL',
ticksdf3$stockname, 'Carnival Cruise line')
ticksdf3$stockname <- ifelse(!ticksdf3$ticker == 'NFLX',
ticksdf3$stockname, 'Netflix')
ticksdf3$stockname <- ifelse(!ticksdf3$ticker == 'ZUO',
ticksdf3$stockname, 'ZUORA')
ticksdf3$stockname <- ifelse(!ticksdf3$ticker == 'SPY',
ticksdf3$stockname, 'SP500 ETF')
ticksdf3$stockname <- ifelse(!ticksdf3$ticker == 'DRI',
ticksdf3$stockname, 'Darden Restaurant')
ticksdf3
print(l.out$df.control)
#clears workspace
rm(list = ls())
dropbox <-  '~/Dropbox (VU Basic Sciences)'
#dropbox <-  '~/Dropbox'
setwd(paste(dropbox, '/Finanzen', sep = ''))
getwd()
library(BatchGetSymbols)
time
# set dates
Sys.setenv(TZ="Etc/GMT+2")
time <- Sys.time()
first.date <- Sys.Date() - 60
last.date <- Sys.Date()
freq.data <- 'daily'
# set tickers
tickers <- c('AAPL','NFLX','SPY','GOLD','BRK/B','DIS','CCL','DRI','ZUO','AAL','LULU','DRI','ZM')
tickers2 <- c('HOG','NKE','V','XOM','GS','IWM','VIX','QQQ','WMT','LUV','HLT','MAR','UBER','LYFT','AMZN','SIX','SEAS','JCP',
'PG','KMB','TRIP','LYV','MELI','OKE','AMD','VEEV','MSFT','GOOG') #FRA:TMV
l.out <- BatchGetSymbols(tickers = tickers,
first.date = first.date,
last.date = last.date,
freq.data = freq.data,
cache.folder = file.path(tempdir(),
'BGS_Cache') ) # cache in tempdir()
print(l.out$df.control)
library(ggplot2)
ticks <- l.out$df.tickers
colms <- c('price.close', 'ticker', 'ref.date')
ticksdf <- ticks[colms]
no_tick <- unique(ticksdf$ticker)
ticksdf3 <- NULL
for (i in seq_along(no_tick)) {
ticker1 <- no_tick[i]
ticksdf1 <- subset(ticksdf, ticker==ticker1)
ticksdf1 <-ticksdf1[-c(1:22),]
ticksdf1$rel_change <-( (ticksdf1$price.close/ticksdf1$price.close[1])-1)*100
ticksdf3 <- rbind.fill(ticksdf3, ticksdf1)
}
ticksdf3$stockname <- 0
ticksdf3$stockname <- ifelse(!ticksdf3$ticker == 'AAL',
ticksdf3$stockname, 'American Airlines')
ticksdf3$stockname <- ifelse(!ticksdf3$ticker == 'AAPL',
ticksdf3$stockname, 'Apple')
ticksdf3$stockname <- ifelse(!ticksdf3$ticker == 'DIS',
ticksdf3$stockname, 'Disney')
ticksdf3$stockname <- ifelse(!ticksdf3$ticker == 'LULU',
ticksdf3$stockname, 'Lulumoon')
ticksdf3$stockname <- ifelse(!ticksdf3$ticker == 'ZM',
ticksdf3$stockname, 'Zoom video conferences')
ticksdf3$stockname <- ifelse(!ticksdf3$ticker == 'GOLD',
ticksdf3$stockname, 'Barrock Gold')
ticksdf3$stockname <- ifelse(!ticksdf3$ticker == 'CCL',
ticksdf3$stockname, 'Carnival Cruise line')
ticksdf3$stockname <- ifelse(!ticksdf3$ticker == 'NFLX',
ticksdf3$stockname, 'Netflix')
ticksdf3$stockname <- ifelse(!ticksdf3$ticker == 'ZUO',
ticksdf3$stockname, 'ZUORA')
ticksdf3$stockname <- ifelse(!ticksdf3$ticker == 'SPY',
ticksdf3$stockname, 'SP500 ETF')
ticksdf3$stockname <- ifelse(!ticksdf3$ticker == 'DRI',
ticksdf3$stockname, 'Darden Restaurant')
ticksdf3
p2 <- ggplot(ticksdf3, aes(x = ref.date, y = rel_change, color=stockname))
p2 <- p2 + geom_line() + ylab('stock price change [%]') + xlab('')
p2 <- p2 +ggthemes::theme_economist()
p2 <- p2 +  theme(legend.title = element_blank())
p <- ggplot(l.out$df.tickers, aes(x = ref.date, y = price.close))
p <- p + geom_line()
p <- p + facet_wrap(~ticker, scales = 'free_y')
print(p2)
#install.packages('gtrendsR')
library(gtrendsR)
library(tidyverse)
#install.packages('ggthemes')
library(ggthemes)
search_terms <- c("Netflix", "Pornhub")
search_terms <- c("Netflix")
search_terms <- c("zoom", "teamviewer","skype","slack")
gtrends(keyword = search_terms,
#geo = "US",
time = "today 1-m") -> output_results  #today 1-m   "now 7-d"
output_results %>%
.$interest_over_time %>%
glimpse()
plot <- output_results %>%
.$interest_over_time %>%
ggplot(aes(x = date, y = hits)) +
#geom_line(colour = "darkblue", size = 1.5) +
geom_line(aes(colour = keyword), size = 1.5) +
ggtitle('Increase in video consumption during Corona crisis\n in the USA')+
# facet_wrap(~keyword) +
ggthemes::theme_economist()+
theme(legend.title = element_blank()
)
dftrends <- output_results$interest_over_time
dftrends <-dftrends[-c(1:2),]
dftrends$rel_change <-( (dftrends$hits/dftrends$hits[1])-1)*100
dftrends$type <- 'Internet searches'
NFLXstock <- subset(ticksdf3, ticker=='NFLX')
names(NFLXstock)[names(NFLXstock) == "ref.date"] <- "date"
NFLXstock$type <- 'stockprice'
netflix <- rbind.fill(dftrends,NFLXstock)
plot2 <-
ggplot(netflix, aes(x = date, y = rel_change)) +
#geom_line(colour = "darkblue", size = 1.5) +
geom_line(aes(colour = type), size = 1.5) +
ggtitle('Increase in global Google searches for Netflix vs.\n its stock pricechange  during the Corona crisis')+
# facet_wrap(~keyword) +
ggthemes::theme_economist()+
theme(legend.title = element_blank()
)
ggsave('covid3_netflix2.pdf', plot2, width = 15, height = 13, units = 'cm')
plot2 <-
ggplot(netflix, aes(x = date, y = rel_change)) +
#geom_line(colour = "darkblue", size = 1.5) +
geom_line(aes(colour = type), size = 1.5) +
ggtitle('Increase in global Google searches for Netflix vs.\n its stock price change during the Corona crisis')+
# facet_wrap(~keyword) +
ggthemes::theme_economist()+
theme(legend.title = element_blank()
)
ggsave('covid3_netflix2.pdf', plot2, width = 15, height = 13, units = 'cm')
getwd()
#dropbox <-  '~/Dropbox'
setwd(paste(dropbox, '/Finanzen', sep = ''))
ggsave('covid3_netflix2.pdf', plot2, width = 15, height = 13, units = 'cm')
plot2 <-
ggplot(netflix, aes(x = date, y = rel_change)) +
#geom_line(colour = "darkblue", size = 1.5) +
geom_line(aes(colour = type), size = 1.5) +
ggtitle('Increase in global Google searches for Netflix vs.\n its stock price change during the Corona crisis')+
# facet_wrap(~keyword) +
ylab('relative change')+
ggthemes::theme_economist()+
theme(legend.title = element_blank()
)
plot2
netflix
gtrends(keyword = search_terms,
#geo = "US",
time = "today 1-m") -> output_results  #today 1-m   "now 7-d"
output_results %>%
.$interest_over_time %>%
glimpse()
dftrends <- output_results$interest_over_time
dftrends <-dftrends[-c(1:2),]
dftrends$rel_change <-( (dftrends$hits/dftrends$hits[1])-1)*100
dftrends$type <- 'Internet searches'
NFLXstock <- subset(ticksdf3, ticker=='NFLX')
names(NFLXstock)[names(NFLXstock) == "ref.date"] <- "date"
NFLXstock$type <- 'stockprice'
netflix <- rbind.fill(dftrends,NFLXstock)
plot2 <-
ggplot(netflix, aes(x = date, y = rel_change)) +
#geom_line(colour = "darkblue", size = 1.5) +
geom_line(aes(colour = type), size = 1.5) +
ggtitle('Increase in global Google searches for Netflix vs.\n its stock price change during the Corona crisis')+
# facet_wrap(~keyword) +
ylab('relative change')+
ggthemes::theme_economist()+
theme(legend.title = element_blank()
)
plot2
dftrends
dftrends <- output_results$interest_over_time
dftrends <-dftrends[-c(1:2),]
dftrends
dftrends$rel_change <-( (dftrends$hits/dftrends$hits[1])-1)*100
dftrends$type <- 'Internet searches'
NFLXstock <- subset(ticksdf3, ticker=='NFLX')
dftrends <- subset(dftrends, keyword=='netflix')
NFLXstock <- subset(ticksdf3, ticker=='NFLX')
names(NFLXstock)[names(NFLXstock) == "ref.date"] <- "date"
NFLXstock$type <- 'stockprice'
netflix <- rbind.fill(dftrends,NFLXstock)
plot2 <-
ggplot(netflix, aes(x = date, y = rel_change)) +
#geom_line(colour = "darkblue", size = 1.5) +
geom_line(aes(colour = type), size = 1.5) +
ggtitle('Increase in global Google searches for Netflix vs.\n its stock price change during the Corona crisis')+
# facet_wrap(~keyword) +
ylab('relative change')+
ggthemes::theme_economist()+
theme(legend.title = element_blank()
)
plot2
dftrends
dftrends <- output_results$interest_over_time
dftrends <-dftrends[-c(1:2),]
dftrends$rel_change <-( (dftrends$hits/dftrends$hits[1])-1)*100
dftrends$type <- 'Internet searches'
dftrends
search_terms <- c("Netflix")
gtrends(keyword = search_terms,
#geo = "US",
time = "today 1-m") -> output_results  #today 1-m   "now 7-d"
output_results %>%
.$interest_over_time %>%
glimpse()
dftrends <- output_results$interest_over_time
dftrends <-dftrends[-c(1:2),]
dftrends$rel_change <-( (dftrends$hits/dftrends$hits[1])-1)*100
dftrends$type <- 'Internet searches'
dftrends <- subset(dftrends, keyword=='netflix')
dftrends
dftrends <- output_results$interest_over_time
dftrends <-dftrends[-c(1:2),]
dftrends$rel_change <-( (dftrends$hits/dftrends$hits[1])-1)*100
dftrends$type <- 'Internet searches'
# dftrends <- subset(dftrends, keyword=='Netflix')
NFLXstock <- subset(ticksdf3, ticker=='NFLX')
names(NFLXstock)[names(NFLXstock) == "ref.date"] <- "date"
NFLXstock$type <- 'stockprice'
netflix <- rbind.fill(dftrends,NFLXstock)
plot2 <-
ggplot(netflix, aes(x = date, y = rel_change)) +
#geom_line(colour = "darkblue", size = 1.5) +
geom_line(aes(colour = type), size = 1.5) +
ggtitle('Increase in global Google searches for Netflix vs.\n its stock price change during the Corona crisis')+
# facet_wrap(~keyword) +
ylab('relative change')+
ggthemes::theme_economist()+
theme(legend.title = element_blank()
)
plot2
first.date
last.date
dftrends <- output_results$interest_over_time
dftrends
dftrends <-dftrends[-c(1:4),]
dftrends$rel_change <-( (dftrends$hits/dftrends$hits[1])-1)*100
dftrends$type <- 'Internet searches'
# dftrends <- subset(dftrends, keyword=='Netflix')
NFLXstock <- subset(ticksdf3, ticker=='NFLX')
names(NFLXstock)[names(NFLXstock) == "ref.date"] <- "date"
NFLXstock$type <- 'stockprice'
netflix <- rbind.fill(dftrends,NFLXstock)
plot2 <-
ggplot(netflix, aes(x = date, y = rel_change)) +
#geom_line(colour = "darkblue", size = 1.5) +
geom_line(aes(colour = type), size = 1.5) +
ggtitle('Increase in global Google searches for Netflix vs.\n its stock price change during the Corona crisis')+
# facet_wrap(~keyword) +
ylab('relative change')+
ggthemes::theme_economist()+
theme(legend.title = element_blank()
)
plot2
ggsave('covid3_netflix2.pdf', plot2, width = 15, height = 13, units = 'cm')
ggsave('covid3_netflix2.png', plot2, width = 15, height = 13, units = 'cm')
getwd()
setwd('~/website')
ggsave('covid3_netflix2.png', plot2, width = 15, height = 13, units = 'cm')
dftrends
setwd("/Users/thiemia/Discovery_Oriented_Data_Science/data")
1400+900+500
1437+822+467
1437+808+467
2774-2712
9500-2250
